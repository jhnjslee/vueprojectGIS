{"remainingRequest":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\App.vue","mtime":1599701769951},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3RpdGxlYmFyewpiYWNrZ3JvdW5kLWNvbG9yOiMzZjUyNjE7Cm1hcmdpbi1ib3R0b20gOiAyMHB4Owp9CgojamItY29udGFpbmVyIHsKICB3aWR0aDogMTUwMHB4OwogIGhlaWdodDogNzUwcHg7CiAgbWFyZ2luOiAwcHggYXV0bzsKICBwYWRkaW5nOiAxMHB4OwogIHJlc2l6ZTogbm9uZTsKICBib3JkZXI6IDBweCBzb2xpZCAjYmNiY2JjOwp9CgojamItaGVhZGVyIHsKICBwYWRkaW5nOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDBweDsKICBib3JkZXI6IDBweCBzb2xpZCAjYmNiY2JjOwp9CgojamItY29udGVudCB7CiAgd2lkdGg6IDEwMDBweDsKICBwYWRkaW5nOiAyMHB4OwogIG1hcmdpbi1ib3R0b206IDBweDsKICBtYXJnaW4tbGVmdDogMTIwcHg7CiAgZmxvYXQ6IGxlZnQ7CiAgYm9yZGVyOiAwcHggc29saWQgI2JjYmNiYzsKfQoKI2piLXNpZGViYXIgewogIHdpZHRoOiAzMDBweDsKICBoZWlnaHQ6IDY3MHB4OwogIHBhZGRpbmc6IDIwcHg7CiAgbWFyZ2luLWJvdHRvbTogMHB4OwogIGZsb2F0OiByaWdodDsKICBib3JkZXI6IDBweCBzb2xpZCAjYmNiY2JjOwp9CgojamItZm9vdGVyIHsKICBjbGVhcjogYm90aDsKICBwYWRkaW5nOiAwcHg7CiAgbWFyZ2luLXRvcDogMHB4OwogIGJvcmRlcjogMHB4IHNvbGlkICNiY2JjYmM7Cn0KCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkWA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" style=\"width:1900px;\" align=\"center\">\n    <v-container class=\"grey lighten-5\" fluid>\n      <v-layout>\n        <v-flex sm=\"9\" id=\"jb-container\">\n          <div id=\"titlebar\">\n            <v-row no-gutters>\n              <v-col cols=\"12\" sm=\"6\" md=\"9\">\n                <div class=\"pa-2\" outlined tile>\n                  <h1 align=\"left\" style=\"color:white;\">Segment 긴급 메시지 전송 시스템</h1>\n                </div>\n              </v-col>\n              <v-col cols=\"6\" md=\"3\">\n                <!-- 로그인 페이지 -->\n                <div class=\"example-modal-window\">\n                  <div v-if=\"!loginCondition\">\n                    <button @click=\"openModal\" style=\"color:white;\">\n                      <h1>로그인</h1>\n                    </button>\n                    <div v-if=\"modal\">\n                      <!-- 컴포넌트 MyModal -->\n                      <MyModal @close=\"closeModal\" v-if=\"modal\">\n                        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n                          <v-text-field v-model=\"id\" :counter=\"20\" label=\"id\" required>\n                          </v-text-field>\n\n                          <v-text-field v-model=\"password\" :append-icon=\"show1 ? 'mdi-eye' : 'mdi-eye-off'\"\n                            :rules=\"[rules.required, rules.min]\" :type=\"show1 ? 'text' : 'password'\" name=\"input-10-1\"\n                            label=\"Password\" hint=\"At least 8 characters\" counter @click:append=\"show1 = !show1\">\n                          </v-text-field>\n\n                          <v-checkbox v-model=\"checkbox\" :rules=\"[v => !!v || 'You must agree to continue!']\"\n                            label=\"아이디 저장\" required></v-checkbox>\n\n                          <v-btn :disabled=\"!valid\" color=\"green\" class=\"mr-4\" @click=\"tryLogin\">\n                            Validate\n                          </v-btn>\n                        </v-form>\n                      </MyModal>\n                    </div>\n                  </div>\n\n                  <div v-if=\"loginCondition\">\n                    <p style=\"font-weight:bold\">{{id}}</p>님 환영합니다.\n                    <button>로그아웃</button>\n                  </div>\n                </div>\n                <v-btn class=\"mr-4\" @click=\"drawCircleP\">propsTest</v-btn>\n                <v-btn class=\"mr-4\" @click=\"makerandomlatlang\">uuidTest</v-btn>\n              </v-col>\n            </v-row>\n          </div>\n          <div>\n            <v-row no-gutters>\n              <v-col cols=\"12\" md=\"10\">\n                <div id=\"jb-contents\">\n                  <Map2 :pointX=\"lat\" :pointY=\"log\" :radius=\"radius\" :level2=\"level\"></Map2>\n                </div>\n              </v-col>\n              <v-col cols=\"6\" md=\"2\">\n                <div id=\"jb-sidebar\" fluid>\n                  <Calamity @childs-event=\"parentsMethod\"></Calamity>\n                </div>\n              </v-col>\n            </v-row>\n          </div>\n          <v-spacer></v-spacer>\n          <div>\n            <h1>&nbsp;</h1>\n          </div>\n          <v-card id=\"jb-footer\">\n            <listTable></listTable>\n          </v-card>\n\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport LoginPro from './components/LoginPro';\nimport Map2 from './components/Map2';\nimport Calamity from './components/Calamity';\nimport listTable from './components/listTable';\nimport Login from './components/Login.vue';\nimport MyModal from './components/LoginForm';\nimport {EventBus} from \"./components/event-bus\";\n\nvar EPSG5179 = new OpenLayers.Projection('EPSG:5179');\nvar EPSG4326 = new OpenLayers.Projection('EPSG:4326');\nlet caldataList = new Array()\nlet uuidList = new Array()\nlet test = 0;\n\nexport default {\n  name: 'App',\n  components: {\n    LoginPro,\n    Map2,\n    Calamity,\n    listTable,\n    Login, //modal\n    MyModal\n  },\n  mounted() {\n    console.log(\"Parent mounted\")\n    this.connect();\n    //this.openModal();\n  },\n  data() {\n    return {\n      valid: false,\n      checkbox: false,\n      show1: false,\n      password: 'Password',\n      rules: {\n        required: value => !!value || 'Required.',\n        min: v => v.length >= 4 || 'Min 8 characters',\n      },\n      modal: false,\n      id: '',\n      password: '',\n      title: \"제목이오\",\n      message: \"\",\n      logs: [],\n      status: \"disconnected\",\n      now: '',\n      lat: 990000.60652286,\n      log: 1720034.9139856,\n      loginCondition: false,\n      radius: 10,\n      level: 0,\n      dateTime: '',\n      calType: 0,\n      calID: 0,\n      caldataList: [],\n      uuid: {\n        x: 0,\n        y: 0,\n        uuid: ''\n      },\n\n    }\n  },\n  //\n\n  methods: {\n    openModal() {\n      this.modal = true\n    },\n    closeModal() {\n      this.modal = false\n    }\n    },\n\n    connect() {\n      //this.socket = new WebSocket(\"ws://158.181.17.81:8080/smart/websocket\");\n      this.socket = new WebSocket(\"wss://echo.websocket.org\");\n      \n      console.log('소켓 연결' + this.socket)\n\n      this.socket.onopen = () => {\n        this.status = \"connected\";\n        this.logs.push({\n          event: \"연결 완료: \",\n          //data: 'ws://158.181.17.81:8080/smart/websocket'\n          data: 'wss://echo.websocket.org'\n        }) //ip변경시 문제점 해결\n        this.socket.onmessage = ({\n          data\n        }) => {\n          this.logs.push({\n            event: \"메세지 수신\",\n            data\n          });\n\n          //관리자가 들어왔을때 라고 가정 로그인 세션 유지\n          if (data.indexOf('200 Login') !== -1) {\n            this.closeModal()\n            alert('admin님 환영합니다.')\n            this.loginCondition = true;\n          } \n\n          else if (data.indexOf('1000 Login') !== -1) {\n            alert('로그인 실패하셨습니다.')\n            this.loginCondition = false;\n          }\n\n          else if (data.substring(0,1) == \"1$\") {\n            const obj = JSON.parse(data);\n            uuidList = new Array();\n            for (var i = 0; i < obj.uuidlist.length; i++) {\n              var uuidindex = {\n                uuidX: 0,\n                uuidY: 0,\n                uuidId: \"\"\n              }\n\n              var wgs84 = proj4('EPSG:4326','EPSG:5179', [obj.uuidlist[i].lat,obj.uuidlist[i].lon]); \n              uuidindex.uuidX = wgs84[0];\n              uuidindex.uuidY = wgs84[1];\n              uuidindex.uuidId = obj.uuidlist[i].uuid;\n              uuidList.push(uuidindex)\n            }\n            EventBus.$emit(\"use-eventbus-uuidTest\", uuidList)\n            this.closeModal()\n          } \n          \n          else if (ata.substring(0,1) == \"2$\") {\n            data.slice(2)\n            const obj = JSON.parse(data);\n\n            var calIndex = {\n              calNum: 0,\n              lat: 0,\n              log: 0,\n              radius: 0,\n              callevel: 0,\n              calType: 0,\n              calTime: '',\n              context: ''\n            }\n            \n            var inputX = proj4('EPSG:4326','EPSG:5179', obj.lat);\n            var inputY = proj4('EPSG:4326','EPSG:5179', obj.lon);\n\n\n            calIndex.lat = inputX;\n            calIndex.log = inputY;\n            calIndex.radius = obj.dangerRange;\n            calIndex.callevel = obj.dangerStep;\n            calIndex.calType = obj.occurType;\n            calIndex.calTime = obj.occurDate;\n            calIndex.context = \"~가 일어났습니다. 대피가 필요합니다.\"\n\n            EventBus.$emit(\"use-eventbus\", calIndex);\n\n            this.closeModal()\n          }\n          console.log(data + '수신')\n        };\n      };\n      console.log(this.status)\n      \n    },\n    disconnect() {\n      console.log('연결 종료')\n      \n      this.socket.close();\n      this.status = \"disconnected\";\n      this.logs = [];\n    },\n    sendMessage(e) {\n      //waitForOpenSocket(socket)\n      this.socket.send(this.message);\n      console.log(this.message + '전송')\n      this.logs.push({\n        event: \"메시지 전송\",\n        data: this.message\n      });\n      this.message = \"\";\n\n    },\n//----------------------------------------------------------------------\n    tryLogin() {\n      this.now = new Date();\n      this.message = '0${' + this.id + this.password + this.now.toUTCString+\"}\";\n      this.sendMessage(this.message);\n      //로그인 시도 프로토콜 \n    },\n\n    waitForOpenSocket(socket) {\n      return new Promise((resolve, _reject) => {\n        while (socket.readyState !== socket.OPEN) {\n          /* no-op */ }\n        return resolve()\n      })\n    },\n\n    drawCircleP() {\n      //재난 정보를 받아오는곳\n      var jbRandom = Math.random();\n      var jcRandom = Math.random();\n      var ranra = Math.random();\n      var callevelR = Math.random();\n\n      var calIndex = {\n        calNum: 0,\n        lat: 0,\n        log: 0,\n        radius: 0,\n        callevel: 0,\n        calType: 0,\n        calTime: '',\n        context: ''\n      }\n\n      calIndex.calNum = this.calID++;\n      this.lat = Math.floor(jbRandom * 9000 + 1095000)\n      calIndex.lat = this.lat;\n\n      this.log = Math.floor(jcRandom * 9000 + 1760000)\n      calIndex.log = this.log;\n\n      this.radius = Math.floor(ranra * 1000 + 1000)\n      calIndex.radius = this.radius;\n\n      calIndex.callevel = Math.floor(callevelR * 4 + 1)\n\n      var typera = Math.random();\n      this.calType = Math.floor(typera * 2)\n      calIndex.calType = this.calType;\n      calIndex.calTime = new Date()\n\n      calIndex.context = \"~가 일어났습니다. 대피가 필요합니다.\"\n\n      console.log(calIndex.callevel + \" \" + calIndex.calTime)\n      EventBus.$emit(\"use-eventbus\", calIndex);\n    },\n    makerandomlatlang() {\n      //uuid를 서버로부터 받아와 다른 컴포넌트로 보내주는 곳\n      uuidList = new Array()\n\n      for (var i = 0; i < 50; i++) {\n        var uuidindex = {\n          uuidX: 0,\n          uuidY: 0,\n          uuidId: \"\"\n        }\n        uuidindex.uuidX = Math.floor(Math.random() * 9000 + 1095000)\n        uuidindex.uuidY = Math.floor(Math.random() * 9000 + 1760000)\n        uuidindex.uuidId = i;\n        uuidList.push(uuidindex)\n      }\n      EventBus.$emit(\"use-eventbus-uuidTest\", uuidList)\n    },\n\n    //uuid를 자식으로 부터 받아오는곳\n    parentsMethod: function (message) {\n      var value = '2${\"Segment\":' + JSON.stringify(message) + '}';\n      this.message = String(value);\n\n      this.sendMessage(this.message);\n      // 자식으로 부터받은 메시지를 사용\n    }\n  \n};\n</script>\n\n\n\n\n<style>\n#titlebar{\nbackground-color:#3f5261;\nmargin-bottom : 20px;\n}\n\n#jb-container {\n  width: 1500px;\n  height: 750px;\n  margin: 0px auto;\n  padding: 10px;\n  resize: none;\n  border: 0px solid #bcbcbc;\n}\n\n#jb-header {\n  padding: 20px;\n  margin-bottom: 0px;\n  border: 0px solid #bcbcbc;\n}\n\n#jb-content {\n  width: 1000px;\n  padding: 20px;\n  margin-bottom: 0px;\n  margin-left: 120px;\n  float: left;\n  border: 0px solid #bcbcbc;\n}\n\n#jb-sidebar {\n  width: 300px;\n  height: 670px;\n  padding: 20px;\n  margin-bottom: 0px;\n  float: right;\n  border: 0px solid #bcbcbc;\n}\n\n#jb-footer {\n  clear: both;\n  padding: 0px;\n  margin-top: 0px;\n  border: 0px solid #bcbcbc;\n}\n\n</style>"]}]}