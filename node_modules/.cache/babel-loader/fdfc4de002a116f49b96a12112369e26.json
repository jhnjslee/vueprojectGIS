{"remainingRequest":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\components\\Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\components\\Map2.vue","mtime":1601866118912},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n\t<div style=\"display:flex; flex-direction: row; justify-content:space-between;\">\r\n\t\t<button @click=\"reset\" class=\"boxTitle\" align=\"left\">재난발생 위치</button>\r\n\t\r\n\t\t<h5 class=\"textal\" align=\"left\">현재 시간 : {{date}} {{time}}</h5>\r\n\t</div>\r\n\t\t\r\n\t<div id=\"map1\">\t\r\n\t\t<div id=\"mouse-position\"></div>\r\n\t\t<div id=\"panel\" style=\"position:absolute;top:520px;right:10px;width:54px;height:100px;z-index:1000000;\">\r\n\t\t<button id=\"testButton\" class=\"btn btn-primary\" @click=\"changesatellite\">\r\n\t\t\t<img src=\"../assets/satellite.png\" style=\"width: 38px;\" >\r\n\t\t\t</button>\r\n\t\t\t<div style='position:absolute;top:-510px;right:0px;width:200px;height:100px;z-index:1000000;'>\t\r\n\t\t\t<input type=\"checkbox\" id=\"cal\"  checked=\"checked\" value=\"One\" @click=\"visibilityC\" v-bind:disabled=\"calcount == 0 ? true:false\" >\r\n           \t<label for=\"one\">재난 </label>\r\n        \t<input type=\"checkbox\" id=\"seg\" checked=\"checked\" value=\"Two\" @click=\"visibilityS\"  v-bind:disabled=\"calcount == 0 ? true:false\" >\r\n            <label for=\"two\">세그먼트 </label>\r\n            <input type=\"checkbox\" id=\"uid\" checked=\"checked\" value=\"Three\" @click=\"visibilityU\"  v-bind:disabled=\"uuidCount == 0 ? true:false\" >\r\n            <label for=\"three\">사용자</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div style=\"position:absolute;top:0px;right:10px;width:54px;height:100px;z-index:9999;\"></div>\r\n\t</div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n\tstore\r\n} from '../store/index.js';\r\nimport {\r\n\tdefaults\r\n} from 'ol/control';\r\nimport {\r\n\tEventBus\r\n} from \"./event-bus\";\r\nimport mapmarkerpng from \"../assets/mapmarker.png\"\r\n\r\nimport peoplesCircle from \"../assets/blink.gif\"\r\nimport satellite from \"../assets/satellite.png\"\r\n\r\n\r\nlet map = '';\r\nlet clustering = \"\";\r\nlet markers = '';\r\nlet popup = '';\r\nlet calamityList = new Array(); //재난 배열 \r\nlet uuidFeatures = new Array(); //유저 배열\r\nlet segmentList = new Array(); //세그먼트 배열\r\nlet segmentRadius = 100; //세그먼트 반지름 \r\nlet segmentFeatures = new Array(); //세그먼트의 feature(polygon)\r\nlet userMarkers = \"\";\r\nlet segmentLayer = \"\";\r\nlet vectorLayer = \"\";\r\nlet centerlayer = \"\";\r\nlet count = 0;\r\nexport default {\r\n\r\n\tprops: ['pointX', 'pointY', 'radius', 'calLevel'],\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tlayerselect: '',\r\n\t\t\tcalview :false,\r\n\t\t\tsegview :false,\r\n\t\t\tuuiview :false,\r\n\t\t\tcalviewcount :0,\r\n\t\t\tsegviewcount :0,\r\n\t\t\tuuiviewcount :0,\r\n\t\t\t\r\n\t\t\tnetwork : '',\r\n\t\t\tmessage: '',\r\n\t\t\tpoint: '',\r\n\t\t\tcalPrimary:'',\r\n\t\t\tcalDate: '',\r\n\t\t\tlat: 0,\r\n\t\t\tlog: 0,\r\n\t\t\tradius2: 0,\r\n\t\t\tlevel: \"\",\r\n\t\t\ttype : '',\r\n\t\t\tstandard_style: {\r\n\t\t\t\tstrokeColor: 'red',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"red\"\r\n\t\t\t},\r\n\t\t\torange_style: {\r\n\t\t\t\tstrokeColor: 'orange',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"orange\"\r\n\t\t\t},\r\n\t\t\tyellow_style: {\r\n\t\t\t\tstrokeColor: 'yellow',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"yellow\"\r\n\t\t\t},\r\n\t\t\tblue_style: {\r\n\t\t\t\tstrokeColor: 'blue',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"blue\"\r\n\t\t\t},\r\n\t\t\tsegment_style: {\r\n\t\t\t\tstrokeColor: 'black',\r\n\t\t\t\tstrokeOpacity: 0.1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 0.1,\r\n\t\t\t\tfillColor: \"${black}\"\r\n\t\t\t}, //세그먼트 Style\r\n\t\t\tlinsStyle: {\r\n\t\t\t\tstrokeColor: 'black',\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 0.5,\r\n\t\t\t\tfillColor: \"${black}\"\r\n\t\t\t}, //라인 Style\r\n\t\t\tcenterStyle:{\r\n\t\t\t\tstrokeColor: 'red',\r\n\t\t\t\tstrokeOpacity: 1.0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 1.0,\r\n\t\t\t\tfillColor: \"${red}\"\r\n\t\t\t\t\r\n\t\t\t},\r\n\r\n\t\t\tcalcount: 0,\r\n\r\n\t\t\tsegcount: 0,\r\n\t\t\tsegmentIndex: {\r\n\t\t\t\tsegNum: 0,\r\n\t\t\t\tcalNum: 0,\r\n\t\t\t\tsegLat: 0,\r\n\t\t\t\tsegLog: 0,\r\n\t\t\t\tsegName: 0\r\n\t\t\t},\r\n\t\t\tuuidCount: 0,\r\n\t\t\tmarkerFeatures: [],\r\n\t\t\thover: '',\r\n\t\t\ttime:\"\",\r\n\t\t\tdate:\"\",\r\n\t\t\tweek : ['일', '월', '화', '수', '목', '금', '토'],\r\n\t\t\ttimerID : setInterval(this.updateTime, 1000)\r\n\t\t\t//x 증가율 radius * 171.5\r\n\t\t\t//y 증가율 radius * 3\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\t//여기는 재난이 들어오는 곳 \r\n\t\tEventBus.$on('use-eventbus', calIndex => {\r\n\t\t\tif (count != 0) {\r\n\t\t\t\tthis.deleteF();\r\n\t\t\t}\r\n\t\t\tvar cal = document.getElementById(\"cal\")\r\n\t\t\tcal.checked=true;\r\n\t\t\tvar seg = document.getElementById(\"seg\")\r\n\t\t\tseg.checked=true;\r\n\t\t\t\t\t\t\r\n\t\t\tthis.calPrimary = calIndex.calNum;\r\n\t\t\tthis.lat = calIndex.lat * 1;\r\n\t\t\tthis.log = calIndex.log * 1;\r\n\t\t\tthis.radius2 = calIndex.radius * 1;\r\n\t\t\tthis.level = calIndex.callevel + \"\";\r\n\t\t\tthis.calDate = calIndex.calTime;\r\n\t\t\tthis.type = calIndex.calType;\r\n\t\t\tthis.message = calIndex.context;\r\n\r\n\t\t\tswitch (this.level) {\r\n\t\t\t\tcase \"심각\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.standard_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"경계\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.orange_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"주의\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.yellow_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"관심\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.blue_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tsegmentLayer = new OpenLayers.Layer.Vector(\"segmentlay\", {\r\n\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\tthis.segment_style\r\n\t\t\t\t)\r\n\t\t\t});\r\n\r\n\t\t\t\r\n\t\t\tvectorLayer.setVisibility(true);\r\n\t\t\tsegmentLayer.setVisibility(true);\r\n\r\n\t\t\tcenterlayer = new OpenLayers.Layer.Vector(\"centerLay\",{\r\n\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\tthis.centerStyle\r\n\t\t\t\t)\r\n\t\t\t});\r\n\r\n\t\t\tthis.drawMainCircle();\r\n\t\t\t//this.drawMainMarker();\r\n\t\t\tcount++;\r\n\t\t});\r\n\r\n\t\tEventBus.$on('use-eventbus-uuidTest', uuidList => {\r\n\t\t\tthis.uuidCount += 1\r\n\t\t\t\r\n\t\t\tuserMarkers.setVisibility(true);\r\n\t\t\tvar uuid = document.getElementById(\"uid\")\r\n\t\t\tuid.checked=true;\r\n\t\t\tuuidFeatures = new Array();\r\n\t\t\tfor (var i = 0; i < uuidList.length; i++) {\r\n\t\t\t\tvar uuidindex = {\r\n\t\t\t\t\tx: uuidList[i].uuidX,\r\n\t\t\t\t\ty: uuidList[i].uuidY,\r\n\t\t\t\t\tuuidcontainseg: -1,\r\n\t\t\t\t\tuuid: uuidList[i].uuidId\r\n\t\t\t\t}\r\n\t\t\t\tuuidFeatures.push(uuidindex);\r\n\t\t\t}\r\n\r\n\t\t\tthis.drawUUID(uuidFeatures);\r\n\t\t});\r\n\r\n\t},\r\n\tmounted() {\r\n\t\tthis.updateTime();\r\n\t\tthis.init();\r\n\t},\r\n\tcomputed: {},\r\n\tmethods: {\r\n\t\tvisibilityC(){\r\n\t\t\tif (vectorLayer.getVisibility() == true) {\r\n        \t\tvectorLayer.setVisibility(false);\r\n    \t\t\t} else {\r\n        \t\tvectorLayer.setVisibility(true);\r\n    \t\t\t}\r\n\t\t},visibilityS(){\r\n\t\t\tif (segmentLayer.getVisibility() == true) {\r\n        \t\tsegmentLayer.setVisibility(false);\r\n    \t\t\t} else {\r\n        \t\tsegmentLayer.setVisibility(true);\r\n    \t\t\t}\r\n\t\t},visibilityU(){\r\n\t\t\tif (userMarkers.getVisibility() == true) {\r\n        \t\tuserMarkers.setVisibility(false);\r\n    \t\t\t} else {\r\n        \t\tuserMarkers.setVisibility(true);\r\n    \t\t\t}\r\n\t\t},\r\n\t\tinit() {\r\n\t\t\tmap = new ngii_wmts.map(\"map1\", {\r\n\t\t\t\t\r\n\t\t\t\tcontrols: [],\r\n\t\t\t\tprojection: \"EPSG:5179\",\r\n\t\t\t\tcenter: new OpenLayers.LonLat(1099472.79652, 1764427.68399),\r\n\t\t\t\tzoom: 7,\r\n\t\t\t\t//mapmode:3,\r\n\t\t\t\tmapMode:0,\r\n\t\t\t\tnumZoomLevels: 21,\r\n\t\t\t\teventListeners: {\r\n\t\t\t\t\tfeatureclick: function (e) {\r\n\t\t\t\t\t\tif (e.feature.layer.name == 'segmentlay') {\r\n\t\t\t\t\t\t\te.feature.renderIntent = \"select\";\r\n\t\t\t\t\t\t\tvar j = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (j = 0; j < segmentList.length; j++) {\r\n\t\t\t\t\t\t\t\tif (segmentList[j].segId == e.feature.id) {\r\n\t\t\t\t\t\t\t\t\t//해당 세그먼트에 몇명이 있는지 확인 \r\n\t\t\t\t\t\t\t\t\tif (popup) {\r\n\t\t\t\t\t\t\t\t\t\tmap.removePopup(popup)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar segcode = e.feature.id.split('_');\r\n\t\t\t\t\t\t\t\t\tvar popuplocation = new OpenLayers.LonLat(segmentList[j].segLat, segmentList[j].segLog)\r\n\t\t\t\t\t\t\t\t\tpopup = new OpenLayers.Popup(\"chicken\",\r\n\t\t\t\t\t\t\t\t\t\tpopuplocation,\r\n\t\t\t\t\t\t\t\t\t\tnew OpenLayers.Size(200, 60),\r\n\t\t\t\t\t\t\t\t\t\t\"세그먼트 번호 :\" + segcode[3] + \"<br>\" + '<div style=\"color:#FF0000\">재난 발생시 인원 :   ' + segmentList[j].segmentUserList.length + \"명\", true);\r\n\r\n\t\t\t\t\t\t\t\t\tmap.addPopup(popup);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tmap.updateSize();\r\n\r\n\t\t\tmap._addDefaultMapModeBox({right:\"1300px\", top:\"500px\"});\r\n\t\t\t//지도 객체 생성 \r\n\t\t\tmap.addControl(new OpenLayers.Control.PanZoomBar());\r\n\t\t\tmap.addControl(new OpenLayers.Control.MousePosition());\r\n\t\t\tmap.addControl(new OpenLayers.Control.ScaleLine());\r\n\t\t\tmap.addControl(new OpenLayers.Control.KeyboardDefaults());\r\n\t\t\t\r\n\t\t\tvar control = new OpenLayers.Control();\r\n\t\t\tOpenLayers.Util.extend(control, {\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\t// this Handler.Box will intercept the shift-mousedown\r\n\t\t\t\t\t// before Control.MouseDefault gets to see it\r\n\t\t\t\t\tthis.box = new OpenLayers.Handler.Box(control, {\r\n\t\t\t\t\t\t\"done\": this.notice\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tkeyMask: OpenLayers.Handler.MOD_SHIFT\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.box.activate();\r\n\t\t\t\t},\r\n\t\t\t\tnotice: function (bounds) {\r\n\t\t\t\t\tOpenLayers.Console.userError(bounds);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tmap.addControl(control);\r\n\r\n\r\n\t\t\t//map.controls[1].disableZoomWheel(); // disable the original behavior of\r\n\r\n\t\t\t//create a new control//\r\n\r\n\t\t\tvar mousewheel = new OpenLayers.Control();\r\n\t\t\tOpenLayers.Util.extend(mousewheel, {\r\n\t\t\t\t// The draw method is called when the control is initialized\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\tthis.mouse = new OpenLayers.Handler.MouseWheel(mousewheel, {\r\n\t\t\t\t\t\t\"up\": mouseUp,\r\n\t\t\t\t\t\t\"down\": mouseDown\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.mouse.activate();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//add new control\r\n\t\t\tmap.addControl(mousewheel);\r\n\t\t\t// change behavior of mouse wheel functions\r\n\t\t\tfunction mouseUp() {\r\n\t\t\t\tmap.zoomTo(map.zoom + 1);\r\n\t\t\t}\r\n\r\n\t\t\tfunction mouseDown() {\r\n\t\t\t\tif (map.zoom > 10) {\r\n\t\t\t\t\tmap.zoomTo(map.zoom - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// var strategy = new OpenLayers.Strategy.Cluster({\r\n\t\t    // distance: 15 // <-- removed clustering flag\r\n\t\t\t// });\r\n\t\t\t// userMarkers = new OpenLayers.Layer.Vector(\"userMarkers\", {strategies: [strategy]});\r\n\r\n\r\n\t\t\tuserMarkers = new OpenLayers.Layer.Markers(\"userMarkers\",{\r\n\t\t\t\t strategies: [\r\n\t\t\t\t\t   new OpenLayers.Strategy.Cluster({distance: 30})\r\n\t\t\t\t ]\r\n\t\t\t\t });\r\n\t\t},\r\n\r\n\t\tdrawMainCircle() {\r\n\t\t\tvar x = this.lat;\r\n\t\t\tvar y = this.log;\r\n\t\t\tvar length = 0;\r\n\t\t\tvar count = 0;\r\n\t\t\r\n\t\t\t//가장 큰 재난 원 \r\n\t\t\tvar point = new OpenLayers.Geometry.Point(x, y);\r\n\t\t\tvar mainCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, this.radius2, 36, 0);\r\n\t\t\tvar mainFeature = new OpenLayers.Feature.Vector(mainCircle);\r\n\t\t\tconsole.log(\"Map says: \" + mainFeature.id);\r\n\t\t\tvectorLayer.addFeatures(mainFeature)\r\n\t\t\t\r\n\t\t\t// var pointRight = new OpenLayers.Geometry.Point(x,y);\r\n\t\t\t// var mainLine = OpenLayers.Geometry.Polygon.createRegularPolygon(point,20, 20, 0);\r\n\t\t\t// var mainLineFeature = new OpenLayers.Feature.Vector(mainLine);\r\n\t\t\t// 중앙 원 \r\n\r\n\r\n\t\t\tthis.calcount += 1;\r\n\t\t\tvar calamityIndex = {\r\n\t\t\t\tcalcount: this.calcount,\r\n\t\t\t\tcalId: mainFeature.id,\r\n\t\t\t\tmainlat: x,\r\n\t\t\t\tmainlog: y,\r\n\t\t\t\tmainradius: this.radius2,\r\n\t\t\t\tmainlevel: this.level,\r\n\t\t\t\tmainType: this.type,\r\n\t\t\t\tcalmessage: this.message\r\n\t\t\t}\r\n\t\t\tcalamityList.push(calamityIndex)\r\n\r\n\t\t\t// 기본 세그먼트 0.0 에 있는거 그리기\r\n\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\tthis.inputSegmentInList(mainFeature.id, x, y, featureCircle.id)\r\n\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\tvar ycount = 0\r\n\t\t\twhile (true) {\r\n\t\t\t\tif (ycount == 0) {\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\t//늘어나는 길이가 루트3만큼 늘어난다.\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, this.log);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, this.log, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\t//this.inputSegmentInList(this.calcount,x + length,this.log)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, this.log);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, this.log, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\t//this.inputSegmentInList(this.calcount,x - length,this.log)\r\n\t\t\t\t\t} //기본이 되는 선을 하나 그린다.\r\n\t\t\t\t\tycount = 1;\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty += 300\r\n\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x, y);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\t//리스트에 집어 넣기\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x, y, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar reverseY = this.log - (y - this.log)\r\n\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x, reverseY);\r\n\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x, reverseY, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\tycount++\r\n\t\t\t\t\t//y축으로 +- 를 쫙 그리고 \r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, y);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, y, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, y);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, y, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, reverseY);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, reverseY, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, reverseY);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, reverseY, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar x = this.lat;\r\n\t\t\tvar y = this.log;\r\n\r\n\t\t\tvar length = 0;\r\n\t\t\tvar ylength = 150;\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\twhile (true) {\r\n\t\t\t\tif (count == 0) {\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y + 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y + 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y + 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y + 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y - 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y - 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y - 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y - 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar ypluspoint = y + ylength\r\n\t\t\t\t\tvar yminuspoint = y - ylength\r\n\t\t\t\t\tvar plusx = x + (171.5 / 2);\r\n\t\t\t\t\tvar minusx = x - (171.5 / 2);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, ypluspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, ypluspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, yminuspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, yminuspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\r\n\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tylength += 300\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y + ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y + ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y + ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y + ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y - ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y - ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y - ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y - ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t//대각선 위치에 있는 원 그리기 \r\n\t\t\t\t\tvar ypluspoint = y + ylength\r\n\t\t\t\t\tvar yminuspoint = y - ylength\r\n\t\t\t\t\tvar plusx = x + (171.5 / 2);\r\n\t\t\t\t\tvar minusx = x - (171.5 / 2);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, ypluspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, ypluspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, yminuspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, yminuspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t//\tcenterlayer.addFeatures(mainLineFeature)\r\n\r\n\t\t\tmap.addLayer(vectorLayer);\r\n\t\t\tmap.addLayer(segmentLayer);\r\n\t\t\t// map.addLayer(centerlayer);\r\n\t\t\t\r\n\t\t\tconsole.log(vectorLayer)\r\n\t\t\tconsole.log(segmentLayer)\r\n\t\t\t\r\n\r\n\t\t\tvar pointZoom = new OpenLayers.LonLat(this.lat, this.log)\r\n\t\t\tmap.setCenter(pointZoom, 8)\r\n\t\t\r\n\t\t\tvar segmentSendingList = [];\r\n\t\t\tvar countall = 0;\r\n\t\t\tvar countsub = 0;\r\n\t\t\t\r\n\t\t\tfor (var k = 0; k < uuidFeatures.length; k++) {\r\n\t\t\t\tuuidFeatures[k].uuidcontainseg =-1;\r\n\t\t\t}\r\n\t\t\tvar calculateradius = calamityIndex.mainradius;\r\n\t\t\tvar calculateuuidList = new Array();\r\n\r\n\t\t\tfor (var k = 0; k < uuidFeatures.length; k++) {\r\n\t\t\tif((Math.sqrt(Math.abs((uuidFeatures[k].x - calamityIndex.mainlat) * (uuidFeatures[k].x - calamityIndex.mainlat)) + Math.abs((uuidFeatures[k].y - calamityIndex.mainlog) * (uuidFeatures[k].y - calamityIndex.mainlog))))< calamityIndex.mainradius+200){\t\r\n\t\t\t\tvar calculateuuidIndex ={\r\n\t\t\t\t\tx: uuidFeatures[k].x,\r\n\t\t\t\t\ty: uuidFeatures[k].y,\r\n\t\t\t\t\tuuidcontainseg: -1,\r\n\t\t\t\t\tuuid: uuidFeatures[k].uuid\r\n\t\t\t\t}\r\n\t\t\t\t\tcalculateuuidList.push(calculateuuidIndex);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//모든 uuid리스트의 포함관계를 초기화 시킨다.\r\n\t\t\t\tvar p = ''\r\n\t\t\t\tfor (var j = 0; j < segmentFeatures.length; j++) {\r\n\t\t\t\t\tif (segmentList[j].calIndex == calamityIndex.calId) {\r\n\t\t\t\t\t\t// 모든 세그먼트중 해당 재난에 들어있는지 안들어있는지 판단\r\n\t\t\t\t\t\tfor (var k = 0; k < calculateuuidList.length; k++) {\r\n\t\t\t\t\t\t\t//모든 uuid 중 \r\n\t\t\t\t\t\t\tp = new OpenLayers.Geometry.Point(calculateuuidList[k].x, calculateuuidList[k].y);\r\n\t\t\t\t\t\t\tif (segmentFeatures[j].geometry.intersects(p)) {\r\n\t\t\t\t\t\t\t\tcountall++;\r\n\r\n\t\t\t\t\t\t\t\tif (calculateuuidList[k].uuidcontainseg == -1) {\r\n\t\t\t\t\t\t\t\t\tsegmentList[j].segmentUserList.push(calculateuuidList[k].uuid)\r\n\t\t\t\t\t\t\t\t\tcalculateuuidList[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t\t\t\t\t\t\t\tsegmentSendingList.push(segmentList[j])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (calculateuuidList[k].uuidcontainseg != -1) {\r\n\t\t\t\t\t\t\t\t\tfor (var h = 0; h < segmentList.length; h++) {\r\n\t\t\t\t\t\t\t\t\t\tif (segmentList[h].segId == calculateuuidList[k].uuidcontainseg) {\r\n\t\t\t\t\t\t\t\t\t\t\t//원래 들어있던게 다를 경우 \r\n\t\t\t\t\t\t\t\t\t\t\tif (segmentList[j].segmentfromcalamity <= segmentList[h].segmentfromcalamity) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcalculateuuidList[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t\t\t\t\t\t\t\t\t\t\tcountsub++;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var k = 0; k < uuidFeatures.length; k++) {\r\n\t\t\t\t\tfor(var j=0; j< calculateuuidList.length;j++){\r\n\t\t\t\t\t\tif(uuidFeatures[k].uuid==calculateuuidList[j].uuid){\r\n\t\t\t\t\t\t\tuuidFeatures[k].uuidcontainseg = calculateuuidList[j].uuidcontainseg;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar calamityAllinfo = {\r\n\t\t\t\t\ttargetUser: 0,\r\n\t\t\t\t\tdangerUser: 0,\r\n\t\t\t\t\tcallPri: this.calPrimary,\r\n\t\t\t\t\tcallat: calamityIndex.mainlat,\r\n\t\t\t\t\tcallon: calamityIndex.mainlog,\r\n\t\t\t\t\tcaldate: this.calDate,\r\n\t\t\t\t\tcallevel: this.level,\r\n\t\t\t\t\tcalRange: this.radius2,\r\n\t\t\t\t\tcalType: calamityIndex.mainType,\r\n\t\t\t\t\tcalNumber: this.calcount,\r\n\t\t\t\t\tcalMessageInfo: calamityIndex.calmessage,\r\n\t\t\t\t\tuuidAllInfo: calculateuuidList,\r\n\t\t\t\t\tsegmentSendingFeature: segmentSendingList\r\n\t\t\t\t}\r\n\t\t\t\tEventBus.$emit(\"calamity-test\", calamityAllinfo)\r\n\t\t},\r\n\t\tpointer(xpoint,ypoint){\r\n\t\t\tvar point = new OpenLayers.Geometry.Point(xpoint, ypluspoint);\r\n\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t},\r\n\t\tdrawMainMarker() {\r\n\t\t\tmarkers = new OpenLayers.Layer.Markers(\"Markers\");\r\n\t\t\tmap.addLayer(markers);\r\n\r\n\t\t\tvar size = new OpenLayers.Size(21, 25);\r\n\t\t\tvar offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);\r\n\t\t\tvar icon = new OpenLayers.Icon(mapmarkerpng, size, offset);\r\n\t\t\tmarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(this.lat, this.log), icon));\r\n\r\n\t\t\tvar markerindex = {\r\n\t\t\t\tmarkerincalamity: this.calcount,\r\n\t\t\t\tmarkersX: this.lat,\r\n\t\t\t\tmarkersY: this.log\r\n\r\n\t\t\t}\r\n\t\t\tthis.markerFeatures.push(markerindex);\r\n\t\t\tmarkers.events.register(\"click\", markers, function (e) {\r\n\t\t\t\tvar calId = 0;\r\n\t\t\t\tvar calamityradius = 0;\r\n\t\t\t\tvar calmainlat = 0;\r\n\t\t\t\tvar calmainlog = 0;\r\n\t\t\t\tvar calNumber = 0;\r\n\t\t\t\tvar caladate = '';\r\n\t\t\t\tvar i\r\n\t\t\t\tfor (i = 0; i < calamityList.length; i++) {\r\n\t\t\t\t\tif (calamityList[i].mainlat == e.object.markers[0].lonlat.lon & calamityList[i].mainlog == e.object.markers[0].lonlat.lat) {\r\n\t\t\t\t\t\tcalId = calamityList[i].calId\r\n\t\t\t\t\t\tcalamityradius = calamityList[i].mainradius\r\n\t\t\t\t\t\tcalmainlat = calamityList[i].mainlat\r\n\t\t\t\t\t\tcalmainlog = calamityList[i].mainlog\r\n\t\t\t\t\t\tcalNumber = calamityList[i].calcount\r\n\t\t\t\t\t\tcaladate = calamityList[i].calDate\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tEventBus.$emit(\"calamity-test\", calamityAllinfo)\r\n\t\t\t\tuuidFeatures = new Array() //유저 배열\r\n\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tdrawUUID(uuidFeatureList) {\r\n\r\n\t\t\tmap.addLayer(userMarkers);\r\n\t\t\tvar size = new OpenLayers.Size(7, 7);\r\n\t\t\tvar offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);\r\n\t\t\tvar icon = new OpenLayers.Icon(peoplesCircle, size, offset);\r\n\r\n\t\t\tuserMarkers.clearMarkers()\r\n\t\t\tif (null != userMarkers.markers) {\r\n\t\t\t\tfor (; 0 < userMarkers.markers;) {\r\n\t\t\t\t\tuserMarkers.removeMarker(userMarkers.markers[0])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < uuidFeatureList.length; i++) {\r\n\t\t\t\tuserMarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(uuidFeatureList[i].x, uuidFeatureList[i].y), icon));\r\n\t\t\t\tuserMarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(uuidFeatureList[i].x, uuidFeatureList[i].y), icon.clone()));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t},\r\n\t\tinputSegmentInList(calNum, latP, logP, segIdent) {\r\n\t\t\tthis.segcount++\r\n\t\t\tvar segmentIndex = {\r\n\t\t\t\tsegNum: this.segcount,\r\n\t\t\t\tsegId: segIdent,\r\n\t\t\t\tcallLevelIndex: this.level,\r\n\t\t\t\tcalRadiusIndex: this.radius2,\r\n\t\t\t\tcallTimeIndex: this.calDate,\r\n\t\t\t\tcallatIndex: this.lat,\r\n\t\t\t\tcallogIndex: this.log,\r\n\t\t\t\tcalcount: this.calcount,\r\n\t\t\t\tmainType: this.type,\r\n\t\t\t\tcalIndex: calNum,\r\n\t\t\t\tsegLat: latP,\r\n\t\t\t\tsegLog: logP,\r\n\t\t\t\tsegmentfromcalamity: 0,\r\n\t\t\t\tsegmentinsidepeople: 0,\r\n\t\t\t\tsegmentUserList: []\r\n\r\n\t\t\t}\r\n\t\t\t//외부노출용 세그먼트번호\r\n\r\n\t\t\tvar dis_x = this.lat - segmentIndex.segLat;\r\n\t\t\tvar dix_y = this.log - segmentIndex.segLog;\r\n\t\t\tsegmentIndex.segmentfromcalamity = Math.sqrt(Math.abs(dis_x * dis_x) + Math.abs(dix_y * dix_y))\r\n\t\t\tsegmentList.push(segmentIndex)\r\n\t\t},\r\n\t\tdeleteF() {\r\n\t\t\tvectorLayer.removeAllFeatures();\r\n\t\t\tsegmentLayer.removeAllFeatures();\r\n\t\t\tcenterlayer.removeAllFeatures();\r\n\t\t\tcalamityList = new Array() //재난 배열 \r\n\t\t\tsegmentList = new Array() //세그먼트 배열\r\n\t\t\tsegmentFeatures = new Array() //세그먼트의 feature(polygon)\r\n\t\t\t\r\n\t\t\tsegmentLayer = \"\";\r\n\t\t\tvectorLayer = \"\";\r\n\t\t\tcenterlayer=\"\";\r\n\r\n\t\t},\r\n\t\tupdateTime() {\r\n\t\t\tvar cd = new Date();\r\n\t\t\tthis.time = this.zeroPadding(cd.getHours(), 2) + ':' + this.zeroPadding(cd.getMinutes(), 2) + ':' + this.zeroPadding(cd.getSeconds(), 2);\r\n\t\t\tthis.date = this.zeroPadding(cd.getFullYear(), 4) + '-' + this.zeroPadding(cd.getMonth()+1, 2) + '-' + this.zeroPadding(cd.getDate(), 2) + ' ' + this.week[cd.getDay()];\r\n\t\t},\r\n\t\tzeroPadding(num, digit) {\r\n\t\t\tvar zero = '';\r\n\t\t\tfor(var i = 0; i < digit; i++) {\r\n\t\t\t\tzero += '0';\r\n\t\t\t}\r\n\t\t\treturn (zero + num).slice(-digit);\r\n\t\t},\r\n\t\treset(){\r\n\t\t\tthis.deleteF();\r\n\t\t},\r\n\t\tchangesatellite(){\r\n\t\t\r\n\t\t\t// var hGoogle = new OpenLayers.Layer.Google(\"Google Satellite\",{\r\n\t\t\t// type:google.maps.MapTypeId.SATELLITE});\r\n\t\t\t// map.addLayer(hGoogle);\r\n\t\t\tif(map._getMapMode()==9){\r\n\t\t\t\tmap._setMapMode(0);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmap._setMapMode(9);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n#map1 {\r\n width:100%;\r\n height:650px;\r\n position:relative;\r\n border: 0px solid #bcbcbc;\r\n}\r\n\r\n#textcontainer {\r\n  display: flex;\r\n}\r\n#textal {\r\n  float: left;\r\n}\r\n#clear-element {\r\n  clear: both; /* or left */\r\n}\r\n.olControlScaleLine{\r\n\tpadding-left: 850px;\r\n}\r\n/**\r\n * Layer switcher\r\n */\r\n.olControlLayerSwitcher {\r\n    position: absolute;\r\n    top: 25px;\r\n    right: 0;\r\n    width: 20em;\r\n    font-family: sans-serif;\r\n    font-weight: bold;\r\n    margin-top: 3px;\r\n    margin-left: 3px;\r\n    margin-bottom: 3px;\r\n    font-size: smaller;\r\n    color: white;\r\n    background-color: #303a59 !important;\r\n}\r\n\r\n.olControlLayerSwitcher .layersDiv {\r\n    padding-top: 5px;\r\n    padding-left: 10px;\r\n    padding-bottom: 5px;\r\n    padding-right: 10px;\r\n    background-color: #303a59 !important;\r\n}\r\n\r\n.olControlLayerSwitcher .layersDiv .baseLbl,\r\n.olControlLayerSwitcher .layersDiv .dataLbl {\r\n    margin-top: 3px;\r\n    margin-left: 3px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.olControlLayerSwitcher .layersDiv .baseLayersDiv,\r\n.olControlLayerSwitcher .layersDiv .dataLayersDiv {\r\n    padding-left: 10px;\r\n}\r\n\r\n.olControlLayerSwitcher .maximizeDiv,\r\n.olControlLayerSwitcher .minimizeDiv {\r\n    width: 18px;\r\n    height: 18px;\r\n    top: 5px;\r\n    right: 0;\r\n    cursor: pointer;\r\n}\r\n\r\n.olBingAttribution {\r\n    color: #DDD;\r\n}\r\n.olBingAttribution.road {\r\n    color: #333;\r\n}\r\n\r\n.olGoogleAttribution.hybrid, .olGoogleAttribution.satellite {\r\n    color: #EEE;\r\n}\r\n.olGoogleAttribution {\r\n    color: #333;\r\n}\r\nspan.olGoogleAttribution a {\r\n    color: #77C;\r\n}\r\nspan.olGoogleAttribution.hybrid a, span.olGoogleAttribution.satellite a {\r\n    color: #EEE;\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}