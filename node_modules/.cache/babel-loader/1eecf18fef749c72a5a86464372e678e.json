{"remainingRequest":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\components\\Map2.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\src\\components\\Map2.vue","mtime":1599644939027},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ljh\\Vueworkspace\\ninja\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map2.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\t<div id=\"map1\">\r\n\t\t<h3 align=\"left\">재난발생 위치</h3>\r\n\t\t<div id=\"mouse-position\"></div>\r\n\t\t<div style=\"position:absolute;top:520px;right:10px;width:54px;height:200px;z-index:1000000;\">\r\n\t\t</div>\r\n\t</div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {\r\n\tstore\r\n} from '../store/index.js';\r\nimport {\r\n\tdefaults\r\n} from 'ol/control';\r\nimport {\r\n\tEventBus\r\n} from \"./event-bus\";\r\nimport mapmarkerpng from \"../assets/mapmarker.png\"\r\nimport peoplesCircle from \"../assets/peoplesCircle.png\"\r\n\r\n\r\nlet map = ''\r\nlet markers = ''\r\nlet popup = ''\r\nlet calamityList = new Array() //재난 배열 \r\nlet uuidFeatures = new Array() //유저 배열\r\nlet segmentList = new Array() //세그먼트 배열\r\nlet segmentRadius = 100\r\nlet segmentFeatures = new Array() //세그먼트의 feature(polygon)\r\nlet userMarkers = \"\";\r\nlet segmentLayer = \"\";\r\nlet vectorLayer = \"\";\r\nlet count = 0;\r\nexport default {\r\n\r\n\tprops: ['pointX', 'pointY', 'radius', 'calLevel'],\r\n\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tmessage: '',\r\n\t\t\tpoint: '',\r\n\t\t\tcalDate: '',\r\n\t\t\tlat: 0,\r\n\t\t\tlog: 0,\r\n\t\t\tradius2: 0,\r\n\t\t\tlevel: 0,\r\n\t\t\tstandard_style: {\r\n\t\t\t\tstrokeColor: 'red',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"red\"\r\n\t\t\t},\r\n\t\t\torange_style: {\r\n\t\t\t\tstrokeColor: 'orange',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"orange\"\r\n\t\t\t},\r\n\t\t\tyellow_style: {\r\n\t\t\t\tstrokeColor: 'yellow',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"yellow\"\r\n\t\t\t},\r\n\t\t\tgreen_style: {\r\n\t\t\t\tstrokeColor: 'green',\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 3,\r\n\t\t\t\tfillOpacity: 0.4,\r\n\t\t\t\tfillColor: \"green\"\r\n\t\t\t},\r\n\t\t\tsegment_style: {\r\n\t\t\t\tstrokeColor: 'black',\r\n\t\t\t\tstrokeOpacity: 0.1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 0.1,\r\n\t\t\t\tfillColor: \"${black}\"\r\n\t\t\t}, //세그먼트 Style\r\n\r\n\t\t\tcalcount: 0,\r\n\r\n\t\t\tsegcount: 0,\r\n\t\t\tsegmentIndex: {\r\n\t\t\t\tsegNum: 0,\r\n\t\t\t\tcalNum: 0,\r\n\t\t\t\tsegLat: 0,\r\n\t\t\t\tsegLog: 0,\r\n\t\t\t\tsegName: 0\r\n\t\t\t},\r\n\t\t\tuuidCount: 0,\r\n\t\t\tmarkerFeatures: [],\r\n\t\t\thover: '',\r\n\r\n\t\t\t//x 증가율 radius * 171.5\r\n\t\t\t//y 증가율 radius * 3\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\t//여기는 재난이 들어오는 곳 \r\n\t\tEventBus.$on('use-eventbus', calIndex => {\r\n\r\n\t\t\tif (count != 0) {\r\n\t\t\t\tthis.deleteF();\r\n\t\t\t}\r\n\r\n\t\t\tthis.lat = calIndex.lat * 1;\r\n\t\t\tthis.log = calIndex.log * 1;\r\n\t\t\tthis.radius2 = calIndex.radius * 1;\r\n\t\t\tthis.level = calIndex.callevel + \"\";\r\n\t\t\tthis.calDate = calIndex.calTime;\r\n\t\t\tswitch (this.level) {\r\n\t\t\t\tcase \"1\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.standard_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"2\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.orange_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"3\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.yellow_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"4\":\r\n\t\t\t\t\tvectorLayer = new OpenLayers.Layer.Vector(\"Overlay\", {\r\n\t\t\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\t\t\tthis.green_style\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tsegmentLayer = new OpenLayers.Layer.Vector(\"segmentlay\", {\r\n\t\t\t\tstyleMap: new OpenLayers.StyleMap(\r\n\t\t\t\t\tthis.segment_style\r\n\t\t\t\t)\r\n\t\t\t});\r\n\t\t\tthis.drawMainCircle();\r\n\t\t\t//this.drawMainMarker();\r\n\t\t\tcount++;\r\n\t\t});\r\n\t\tEventBus.$on('use-eventbus-uuidTest', uuidList => {\r\n\t\t\tthis.uuidCount += 1\r\n\t\t\tuuidFeatures = new Array();\r\n\t\t\tfor (var i = 0; i < uuidList.length; i++) {\r\n\t\t\t\tvar uuidindex = {\r\n\t\t\t\t\tx: uuidList[i].uuidX,\r\n\t\t\t\t\ty: uuidList[i].uuidY,\r\n\t\t\t\t\tuuidcontainCal: 0,\r\n\t\t\t\t\tuuidcontainseg: -1,\r\n\t\t\t\t\tuuid: uuidList[i].uuidId\r\n\t\t\t\t}\r\n\t\t\t\tuuidFeatures.push(uuidindex);\r\n\t\t\t}\r\n\r\n\t\t\tthis.drawUUID(uuidFeatures);\r\n\t\t});\r\n\r\n\t},\r\n\tmounted() {\r\n\t\tthis.init();\r\n\t},\r\n\tcomputed: {},\r\n\tmethods: {\r\n\t\tinit() {\r\n\t\t\tmap = new ngii_wmts.map(\"map1\", {\r\n\t\t\t\tcontrols: [],\r\n\t\t\t\tprojection: \"EPSG:5179\",\r\n\t\t\t\tcenter: new OpenLayers.LonLat(1099472.79652, 1764427.68399),\r\n\t\t\t\tzoom: 7,\r\n\t\t\t\tnumZoomLevels: 21,\r\n\t\t\t\teventListeners: {\r\n\t\t\t\t\tfeatureclick: function (e) {\r\n\t\t\t\t\t\tif (e.feature.layer.name == 'segmentlay') {\r\n\t\t\t\t\t\t\te.feature.renderIntent = \"select\";\r\n\t\t\t\t\t\t\tvar j = 0;\r\n\t\t\t\t\t\t\tfor (j = 0; j < segmentList.length; j++) {\r\n\t\t\t\t\t\t\t\tif (segmentList[j].segId == e.feature.id) {\r\n\t\t\t\t\t\t\t\t\t//해당 세그먼트에 몇명이 있는지 확인 \r\n\t\t\t\t\t\t\t\t\tif (popup) {\r\n\t\t\t\t\t\t\t\t\t\tmap.removePopup(popup)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar segcode = e.feature.id.split('_');\r\n\t\t\t\t\t\t\t\t\tvar countuuid = 0;\r\n\r\n\t\t\t\t\t\t\t\t\tfor (var l = 0; l < uuidFeatures.length; l++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (uuidFeatures[l].uuidcontainseg == segmentList[j].segId)\r\n\t\t\t\t\t\t\t\t\t\t\tcountuuid++\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar popuplocation = new OpenLayers.LonLat(segmentList[j].segLat, segmentList[j].segLog)\r\n\t\t\t\t\t\t\t\t\tpopup = new OpenLayers.Popup(\"chicken\",\r\n\t\t\t\t\t\t\t\t\t\tpopuplocation,\r\n\t\t\t\t\t\t\t\t\t\tnew OpenLayers.Size(200, 60),\r\n\t\t\t\t\t\t\t\t\t\t\"세그먼트 번호 :\" + segcode[3] + \"<br>\" + '<div style=\"color:#FF0000\">포함 인원 :   ' + countuuid + \"명\", true);\r\n\r\n\t\t\t\t\t\t\t\t\tmap.addPopup(popup);\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//지도 객체 생성 \r\n\t\t\tmap.addControl(new OpenLayers.Control.PanZoomBar());\r\n\t\t\tmap.addControl(new OpenLayers.Control.MousePosition());\r\n\t\t\tmap.addControl(new OpenLayers.Control.OverviewMap());\r\n\t\t\tmap.addControl(new OpenLayers.Control.KeyboardDefaults());\r\n\r\n\t\t\tvar control = new OpenLayers.Control();\r\n\t\t\tOpenLayers.Util.extend(control, {\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\t// this Handler.Box will intercept the shift-mousedown\r\n\t\t\t\t\t// before Control.MouseDefault gets to see it\r\n\t\t\t\t\tthis.box = new OpenLayers.Handler.Box(control, {\r\n\t\t\t\t\t\t\"done\": this.notice\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tkeyMask: OpenLayers.Handler.MOD_SHIFT\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.box.activate();\r\n\t\t\t\t},\r\n\t\t\t\tnotice: function (bounds) {\r\n\t\t\t\t\tOpenLayers.Console.userError(bounds);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tmap.addControl(control);\r\n\r\n\r\n\t\t\t//map.controls[1].disableZoomWheel(); // disable the original behavior of\r\n\r\n\t\t\t//create a new control//\r\n\r\n\t\t\tvar mousewheel = new OpenLayers.Control();\r\n\t\t\tOpenLayers.Util.extend(mousewheel, {\r\n\t\t\t\t// The draw method is called when the control is initialized\r\n\t\t\t\tdraw: function () {\r\n\t\t\t\t\tthis.mouse = new OpenLayers.Handler.MouseWheel(mousewheel, {\r\n\t\t\t\t\t\t\"up\": mouseUp,\r\n\t\t\t\t\t\t\"down\": mouseDown\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.mouse.activate();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//add new control\r\n\t\t\tmap.addControl(mousewheel);\r\n\t\t\t// change behavior of mouse wheel functions\r\n\t\t\tfunction mouseUp() {\r\n\t\t\t\tmap.zoomTo(map.zoom + 1);\r\n\t\t\t}\r\n\r\n\t\t\tfunction mouseDown() {\r\n\t\t\t\tif (map.zoom > 10) {\r\n\t\t\t\t\tmap.zoomTo(map.zoom - 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tuserMarkers = new OpenLayers.Layer.Markers(\"userMarkers\");\r\n\r\n\t\t},\r\n\r\n\t\tdrawMainCircle() {\r\n\t\t\tvar x = this.lat;\r\n\t\t\tvar y = this.log;\r\n\t\t\tvar length = 0;\r\n\t\t\tvar count = 0;\r\n\t\t\t//가장 큰 재난 원 \r\n\t\t\tvar point = new OpenLayers.Geometry.Point(x, y);\r\n\t\t\tvar mainCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, this.radius2, 36, 0);\r\n\t\t\tvar mainFeature = new OpenLayers.Feature.Vector(mainCircle);\r\n\t\t\tconsole.log(\"Map says: \" + mainFeature.id);\r\n\t\t\tvectorLayer.addFeatures(mainFeature)\r\n\r\n\t\t\tthis.calcount += 1;\r\n\t\t\tvar calamityIndex = {\r\n\t\t\t\tcalcount: this.calcount,\r\n\t\t\t\tcalId: mainFeature.id,\r\n\t\t\t\tmainlat: x,\r\n\t\t\t\tmainlog: y,\r\n\t\t\t\tmainradius: this.radius2,\r\n\t\t\t\tmainlevel: this.level,\r\n\t\t\t\tmainType: 0,\r\n\t\t\t\tcalmessage: \"m\"\r\n\t\t\t}\r\n\t\t\tcalamityList.push(calamityIndex)\r\n\r\n\t\t\t// 기본 세그먼트 0.0 에 있는거 그리기\r\n\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\tthis.inputSegmentInList(mainFeature.id, x, y, featureCircle.id)\r\n\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\tvar ycount = 0\r\n\t\t\twhile (true) {\r\n\t\t\t\tif (ycount == 0) {\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\t//늘어나는 길이가 루트3만큼 늘어난다.\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, this.log);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, this.log, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\t//this.inputSegmentInList(this.calcount,x + length,this.log)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, this.log);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, this.log, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\t//this.inputSegmentInList(this.calcount,x - length,this.log)\r\n\t\t\t\t\t} //기본이 되는 선을 하나 그린다.\r\n\t\t\t\t\tycount = 1;\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ty += 300\r\n\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x, y);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\t//리스트에 집어 넣기\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x, y, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar reverseY = this.log - (y - this.log)\r\n\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x, reverseY);\r\n\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x, reverseY, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\tycount++\r\n\t\t\t\t\t//y축으로 +- 를 쫙 그리고 \r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, y);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, y, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, y);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, y, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(x + length, reverseY);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + length, reverseY, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(x - length, reverseY);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - length, reverseY, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar x = this.lat;\r\n\t\t\tvar y = this.log;\r\n\r\n\t\t\tvar length = 0;\r\n\t\t\tvar ylength = 150;\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\twhile (true) {\r\n\t\t\t\tif (count == 0) {\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y + 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y + 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y + 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y + 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y - 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y - 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y - 150);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y - 150, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar ypluspoint = y + ylength\r\n\t\t\t\t\tvar yminuspoint = y - ylength\r\n\t\t\t\t\tvar plusx = x + (171.5 / 2);\r\n\t\t\t\t\tvar minusx = x - (171.5 / 2);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, ypluspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, ypluspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, yminuspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, yminuspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\r\n\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tylength += 300\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y + ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\r\n\t\t\t\t\tif (!myCircle.intersects(mainCircle)) break;\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y + ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y + ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y + ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point2 = new OpenLayers.Geometry.Point(x + (171.5 / 2), y - ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point2, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x + (171.5 / 2), y - ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\tvar point3 = new OpenLayers.Geometry.Point(x - (171.5 / 2), y - ylength);\r\n\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point3, segmentRadius, 36, 0);\r\n\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, x - (171.5 / 2), y - ylength, featureCircle.id)\r\n\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t//대각선 위치에 있는 원 그리기 \r\n\t\t\t\t\tvar ypluspoint = y + ylength\r\n\t\t\t\t\tvar yminuspoint = y - ylength\r\n\t\t\t\t\tvar plusx = x + (171.5 / 2);\r\n\t\t\t\t\tvar minusx = x - (171.5 / 2);\r\n\t\t\t\t\twhile (true) {\r\n\t\t\t\t\t\t//그 y축을 가지고 x축을 그린다.\r\n\t\t\t\t\t\tlength += 171.5;\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, ypluspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tif (!mainCircle.intersects(myCircle)) break;\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, ypluspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, ypluspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t\tvar point = new OpenLayers.Geometry.Point(plusx + length, yminuspoint);\r\n\t\t\t\t\t\tvar myCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(point, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(myCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, plusx + length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\r\n\t\t\t\t\t\tvar minuspoint = new OpenLayers.Geometry.Point(minusx - length, yminuspoint);\r\n\t\t\t\t\t\tvar minusmyCircle = OpenLayers.Geometry.Polygon.createRegularPolygon(minuspoint, segmentRadius, 36, 0);\r\n\t\t\t\t\t\tvar featureCircle = new OpenLayers.Feature.Vector(minusmyCircle);\r\n\t\t\t\t\t\tsegmentLayer.addFeatures(featureCircle)\r\n\t\t\t\t\t\tthis.inputSegmentInList(mainFeature.id, minusx - length, yminuspoint, featureCircle.id)\r\n\t\t\t\t\t\tsegmentFeatures.push(featureCircle)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlength = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmap.addLayer(vectorLayer);\r\n\t\t\tmap.addLayer(segmentLayer);\r\n\t\t\tvar pointZoom = new OpenLayers.LonLat(this.lat, this.log)\r\n\t\t\tmap.setCenter(pointZoom, 8)\r\n\r\n\t\t\t\tvar segmentSendingList = [];\r\n\r\n\t\t\t\t//마커 클릭시 중복 제거 함수\r\n\t\t\t\tfor (var j = 0; j < segmentFeatures.length; j++) {\r\n\t\t\t\t\tif (segmentList[j].calIndex == calamityIndex.calId) {\r\n\t\t\t\t\t\t// Polygon 안에 들어있는지 안들어있는지 판단하는 조건문\r\n\t\t\t\t\t\tfor (var k = 0; k < uuidFeatures.length; k++) {\r\n\t\t\t\t\t\t\tvar p = new OpenLayers.Geometry.Point(uuidFeatures[k].x, uuidFeatures[k].y);\r\n\r\n\t\t\t\t\t\t\tif (segmentFeatures[j].geometry.intersects(p)) {\r\n\t\t\t\t\t\t\t\tif (uuidFeatures[k].uuidcontainseg == -1) {\r\n\t\t\t\t\t\t\t\t\tsegmentList[j].segmentUserList.push(uuidFeatures[k].uuid)\r\n\t\t\t\t\t\t\t\t\tuuidFeatures[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t\t\t\t\t\t\t\tsegmentSendingList.push(segmentList[j])\r\n\t\t\t\t\t\t\t\t} else if (uuidFeatures[k].uuidcontainseg != -1) {\r\n\t\t\t\t\t\t\t\t\tfor (var h = 0; h < segmentList.length; h++) {\r\n\t\t\t\t\t\t\t\t\t\tif (segmentList[h].segId == uuidFeatures[k].uuidcontainseg) {\r\n\t\t\t\t\t\t\t\t\t\t\t//원래 들어있던게 다를 경우 \r\n\t\t\t\t\t\t\t\t\t\t\tif (segmentList[j].segmentfromcalamity <= segmentList[h].segmentfromcalamity) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tuuidFeatures[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar calamityAllinfo = {\r\n\t\t\t\t\ttargetUser: 0,\r\n\t\t\t\t\tdangerUser: 0,\r\n\t\t\t\t\tlittledangerUser: 0,\r\n\t\t\t\t\tnormalUser: 0,\r\n\t\t\t\t\tsafeUser: 0,\r\n\t\t\t\t\tcallat: calamityIndex.mainlat,\r\n\t\t\t\t\tcallon: calamityIndex.mainlog,\r\n\t\t\t\t\tcaldate: this.calDate,\r\n\t\t\t\t\tcallevel: this.level,\r\n\t\t\t\t\tcalType: calamityIndex.mainType,\r\n\t\t\t\t\tcalNumber: this.calcount,\r\n\t\t\t\t\tcalMessageInfo: calamityIndex.calmessage,\r\n\t\t\t\t\tuuidAllInfo: uuidFeatures,\r\n\t\t\t\t\tsegmentSendingFeature: segmentSendingList\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tEventBus.$emit(\"calamity-test\", calamityAllinfo)\r\n\r\n\t\t},\r\n\r\n\t\t// drawMainMarker() {\r\n\t\t// \tmarkers = new OpenLayers.Layer.Markers(\"Markers\");\r\n\t\t// \tmap.addLayer(markers);\r\n\r\n\t\t// \tvar size = new OpenLayers.Size(21, 25);\r\n\t\t// \tvar offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);\r\n\t\t// \tvar icon = new OpenLayers.Icon(mapmarkerpng, size, offset);\r\n\t\t// \tmarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(this.lat, this.log), icon));\r\n\r\n\t\t// \tvar markerindex = {\r\n\t\t// \t\tmarkerincalamity: this.calcount,\r\n\t\t// \t\tmarkersX: this.lat,\r\n\t\t// \t\tmarkersY: this.log\r\n\r\n\t\t// \t}\r\n\t\t// \tthis.markerFeatures.push(markerindex);\r\n\t\t// \tmarkers.events.register(\"click\", markers, function (e) {\r\n\t\t// \t\tvar calId = 0;\r\n\t\t// \t\tvar calamityradius = 0;\r\n\t\t// \t\tvar calmainlat = 0;\r\n\t\t// \t\tvar calmainlog = 0;\r\n\t\t// \t\tvar calNumber = 0;\r\n\t\t// \t\tvar caladate = '';\r\n\t\t// \t\tvar i\r\n\t\t// \t\tfor (i = 0; i < calamityList.length; i++) {\r\n\t\t// \t\t\tif (calamityList[i].mainlat == e.object.markers[0].lonlat.lon & calamityList[i].mainlog == e.object.markers[0].lonlat.lat) {\r\n\t\t// \t\t\t\tcalId = calamityList[i].calId\r\n\t\t// \t\t\t\tcalamityradius = calamityList[i].mainradius\r\n\t\t// \t\t\t\tcalmainlat = calamityList[i].mainlat\r\n\t\t// \t\t\t\tcalmainlog = calamityList[i].mainlog\r\n\t\t// \t\t\t\tcalNumber = calamityList[i].calcount\r\n\t\t// \t\t\t\tcaladate = calamityList[i].calDate\r\n\t\t// \t\t\t\tbreak;\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\r\n\r\n\t\t// \t\tvar x1 = calmainlat\r\n\t\t// \t\tvar y1 = calmainlog\r\n\t\t// \t\tvar uuidInCalamitysafe = 1;\r\n\t\t// \t\tvar uuidInCalamityNormal = 1;\r\n\t\t// \t\tvar uuidInCalamitylittledanger = 1;\r\n\t\t// \t\tvar uuidInCalamitydanger = 1;\r\n\r\n\t\t// \t\tvar segmentSendingList = [];\r\n\r\n\t\t// \t\t//마커 클릭시 중복 제거 함수\r\n\t\t// \t\tfor (var j = 0; j < segmentFeatures.length; j++) {\r\n\t\t// \t\t\tif (segmentList[j].calIndex == calId) {\r\n\t\t// \t\t\t\t// Polygon 안에 들어있는지 안들어있는지 판단하는 조건문\r\n\t\t// \t\t\t\tfor (var k = 0; k < uuidFeatures.length; k++) {\r\n\t\t// \t\t\t\t\tvar p = new OpenLayers.Geometry.Point(uuidFeatures[k].x, uuidFeatures[k].y);\r\n\r\n\t\t// \t\t\t\t\tif (segmentFeatures[j].geometry.intersects(p)) {\r\n\t\t// \t\t\t\t\t\tif (uuidFeatures[k].uuidcontainseg == -1) {\r\n\t\t// \t\t\t\t\t\t\tsegmentList[j].segmentUserList.push(uuidFeatures[k].uuid)\r\n\t\t// \t\t\t\t\t\t\tuuidFeatures[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t// \t\t\t\t\t\t\tsegmentSendingList.push(segmentList[j])\r\n\t\t// \t\t\t\t\t\t} else if (uuidFeatures[k].uuidcontainseg != -1) {\r\n\t\t// \t\t\t\t\t\t\tfor (var h = 0; h < segmentList.length; h++) {\r\n\t\t// \t\t\t\t\t\t\t\tif (segmentList[h].segId == uuidFeatures[k].uuidcontainseg) {\r\n\t\t// \t\t\t\t\t\t\t\t\t//원래 들어있던게 다를 경우 \r\n\t\t// \t\t\t\t\t\t\t\t\tif (segmentList[j].segmentfromcalamity <= segmentList[h].segmentfromcalamity) {\r\n\t\t// \t\t\t\t\t\t\t\t\t\tuuidFeatures[k].uuidcontainseg = segmentList[j].segId;\r\n\t\t// \t\t\t\t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t\t\t\r\n\t\t// \t\tvar calamityAllinfo = {\r\n\t\t// \t\t\ttargetUser: 0,\r\n\t\t// \t\t\tdangerUser: 0,\r\n\t\t// \t\t\tlittledangerUser: 0,\r\n\t\t// \t\t\tnormalUser: 0,\r\n\t\t// \t\t\tsafeUser: 0,\r\n\t\t// \t\t\tcallat: calamityList[i].mainlat,\r\n\t\t// \t\t\tcallon: calamityList[i].mainlog,\r\n\t\t// \t\t\tcaldate: calamityList[i].calDate,\r\n\t\t// \t\t\tcallevel: calamityList[i].mainlevel,\r\n\t\t// \t\t\tcalType: calamityList[i].mainType,\r\n\t\t// \t\t\tcalNumber: calamityList[i].calcount,\r\n\t\t// \t\t\tcalMessageInfo: calamityList[i].calmessage,\r\n\t\t// \t\t\tuuidAllInfo: uuidFeatures,\r\n\t\t// \t\t\tsegmentSendingFeature: segmentSendingList\r\n\t\t// \t\t}\r\n\r\n\r\n\t\t// \t\tEventBus.$emit(\"calamity-test\", calamityAllinfo)\r\n\t\t// \t\t// uuidFeatures = new Array() //유저 배열\r\n\r\n\t\t// \t});\r\n\t\t// },\r\n\r\n\t\tdrawUUID(uuidFeatureList) {\r\n\r\n\t\t\tvar size = new OpenLayers.Size(10, 10);\r\n\t\t\tvar offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);\r\n\r\n\t\t\tvar icon = new OpenLayers.Icon(peoplesCircle, size, offset);\r\n\t\t\tuserMarkers.clearMarkers()\r\n\t\t\tif (null != userMarkers.markers) {\r\n\t\t\t\tfor (; 0 < userMarkers.markers;) {\r\n\t\t\t\t\tuserMarkers.removeMarker(userMarkers.markers[0])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < uuidFeatureList.length; i++) {\r\n\t\t\t\tuserMarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(uuidFeatureList[i].x, uuidFeatureList[i].y), icon));\r\n\t\t\t\tuserMarkers.addMarker(new OpenLayers.Marker(new OpenLayers.LonLat(uuidFeatureList[i].x, uuidFeatureList[i].y), icon.clone()));\r\n\t\t\t}\r\n\t\t\tmap.addLayer(userMarkers);\r\n\t\t},\r\n\t\tinputSegmentInList(calNum, latP, logP, segIdent) {\r\n\t\t\tthis.segcount++\r\n\t\t\tvar segmentIndex = {\r\n\t\t\t\tsegNum: this.segcount,\r\n\t\t\t\tsegId: segIdent,\r\n\t\t\t\tcallLevelIndex: this.level,\r\n\t\t\t\tcalRadiusIndex: this.radius2,\r\n\t\t\t\tcallTimeIndex: this.calDate,\r\n\t\t\t\tcallatIndex: this.lat,\r\n\t\t\t\tcallogIndex: this.log,\r\n\t\t\t\tcalcount: this.calcount,\r\n\t\t\t\tmainType: 0,\r\n\t\t\t\tcalIndex: calNum,\r\n\t\t\t\tsegLat: latP,\r\n\t\t\t\tsegLog: logP,\r\n\t\t\t\tsegmentfromcalamity: 0,\r\n\t\t\t\tsegmentUserList: []\r\n\t\t\t}\r\n\t\t\t//외부노출용 세그먼트번호\r\n\r\n\t\t\tvar dis_x = this.lat - segmentIndex.segLat;\r\n\t\t\tvar dix_y = this.log - segmentIndex.segLog;\r\n\t\t\tsegmentIndex.segmentfromcalamity = Math.sqrt(Math.abs(dis_x * dis_x) + Math.abs(dix_y * dix_y))\r\n\t\t\tsegmentList.push(segmentIndex)\r\n\t\t},\r\n\r\n\t\tdeleteF() {\r\n\t\t\tvectorLayer.removeAllFeatures();\r\n\t\t\tsegmentLayer.removeAllFeatures();\r\n\t\t\tcalamityList = new Array() //재난 배열 \r\n\t\t\tsegmentList = new Array() //세그먼트 배열\r\n\t\t\tsegmentFeatures = new Array() //세그먼트의 feature(polygon)\r\n\r\n\t\t\tsegmentLayer = \"\";\r\n\t\t\tvectorLayer = \"\";\r\n\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n<!--\r\n당산역 좌표 37 32 3.19 N 126 54 5.68 E\r\n-->\r\n\r\n<style>\r\n#map1 {\r\n width:1800;\r\n height:630px;\r\n position:relative;\r\n border: 0px solid #bcbcbc;\r\n\r\n}\r\n</style>"],"sourceRoot":"src/components"}]}